{{- if .Values.topologyUpdater.enable -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-feature-discovery.fullname" . }}-topology-updater
  labels:
    {{- include "node-feature-discovery.labels" . | nindent 4 }}
    role: topology-updater
spec:
  selector:
    matchLabels:
      {{- include "node-feature-discovery.selectorLabels" . | nindent 6 }}
      role: topology-updater
  template:
    metadata:
      labels:
        {{- include "node-feature-discovery.selectorLabels" . | nindent 8 }}
        role: topology-updater
      annotations:
        {{- toYaml .Values.topologyUpdater.annotations | nindent 8 }}
    spec:
      serviceAccountName: {{ include "node-feature-discovery.topologyUpdater.serviceAccountName" . }}
      dnsPolicy: ClusterFirstWithHostNet
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.topologyUpdater.podSecurityContext | nindent 8 }}
      containers:
      - name: topology-updater
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
          - "nfd-topology-updater"
        args:
          - "--server={{ include "node-feature-discovery.fullname" . }}-master:{{ .Values.master.service.port }}"
          {{- if .Values.topologyUpdater.updateInterval | empty | not }}
          - "--sleep-interval={{ .Values.topologyUpdater.updateInterval }}"
          {{- else }}
          - "--sleep-interval=3s"
          {{- end }}
          {{- if .Values.topologyUpdater.watchNamespace | empty | not }}
          - "--watch-namespace={{ .Values.topologyUpdater.watchNamespace }}"
          {{- else }}
          - "--watch-namespace=*"
          {{- end }}
        volumeMounts:
        - name: kubelet-config
          mountPath: /host-var/lib/kubelet/config.yaml
        - name: kubelet-podresources-sock
          mountPath: /host-var/lib/kubelet/pod-resources/kubelet.sock
        - name: host-sys
          mountPath: /host-sys
        resources:
      {{- toYaml .Values.topologyUpdater.resources | nindent 12 }}
        securityContext:
      {{- toYaml .Values.topologyUpdater.securityContext | nindent 12 }}
      volumes:
      - name: host-sys
        hostPath:
          path: "/sys"
          type: Directory
      - name: kubelet-config
        hostPath:
          {{- if .Values.topologyUpdater.kubeletConfigPath | empty | not }}
          path: {{ .Values.topologyUpdater.kubeletConfigPath }}
          {{- else }}
          path: /var/lib/kubelet/config.yaml
          {{- end }}
          type: File
      - name: kubelet-podresources-sock
        hostPath:
          {{- if .Values.topologyUpdater.kubeletPodResourcesSockPath | empty | not }}
          path: {{ .Values.topologyUpdater.kubeletPodResourcesSockPath }}
          {{- else }}
          path: /var/lib/kubelet/pod-resources/kubelet.sock
          {{- end }}
          type: Socket

    {{- with .Values.topologyUpdater.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.topologyUpdater.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.topologyUpdater.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
